version: '3'

services:
  spring:
    build: ./spring
    container_name: spring
    networks:
      - match-network
    depends_on:
      - mysql
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:5432/matching
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=madmin
  mysql:
    image: mysql:8.0.26
    container_name: mysql
    restart: on-failure
    environment:
      - TZ=Asia/Seoul
      - MYSQL_DATABASE=matching
      - MYSQL_ROOT_PASSWORD=madmin
    ports:
      - 3306:3306
    networks:
      - match-network
    command:
      - --character-set-server=utf8 
      - --collation-server=utf8_general_ci
    volumes: 
      - ./mysql/init/:/docker-entrypoint-initdb.d/
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Seoul
    networks:
      - match-network


networks:
  match-network:

volumes:
  postgres: {}
  redis: {}
