server:
  servlet:
    context-path: /api
cors:
  origin:
    url:

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/matching?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true&MVCC=TRUE
    username: root
    password: madmin
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  jpa:
    hibernate:
#      ddl-auto: none
      generate-ddl: false
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
#        show_sql: true # JPA, 하이버네이트가 생성하는 SQL이 로그에 생성 (sysout)
#        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

#  kafka:
#    consumer:
#      bootstrap-servers: localhost:29092
#      group-id: test-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      bootstrap-servers: localhost:29092
#      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  redis:
    lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
    host: localhost
    port: 6379
#  sql:
#    init:
#      mode: always
#logging:
#  level:
#    org.hibernate.SQL: debug # JPA, 하이버네이트가 생성하는 SQL이 로그에 생성 (logger)
#    org.hibernate.type: trace # 쿼리파라미터 로그

# HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용해야 한다.
# Secret 값은 특정 문자열을 Base64 로 인코딩한 값 사용 (아래 명령어를 터미널에 쳐보면 그대로 나옴)
# $ echo 'spring-boot-security-jwt-tutorial-ilmin-spring-boot-security-jwt-tutorial' | base64
jwt:
  secret: c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWlsbWluLXNwcmluZy1ib290LXNlY3VyaXR5LWp3dC10dXRvcmlhbAo=
